{"version":3,"sources":["components/sidebar/Sidebar.jsx","components/topbar/logo.jpg","components/topbar/Topbar.jsx","common/index.js","Views/MenuItems/modal/EditMenu.jsx","Views/MenuItems/MenuListItems.jsx","Views/ScheduleMenu/ScheduleMenu.jsx","Views/customer/Cart.js","Views/customer/CategoryBar.js","Views/customer/MenuCard.js","Views/customer/RestaurantMenu.js","Views/customer/Menu.js","App.js","index.js"],"names":["Sidebar","className","to","Restaurant","MenuBook","target","DynamicFeed","ChatBubbleOutline","Topbar","src","logo","alt","axios","require","axiosGet","url","a","get","resp","console","log","data","errorString","axiosPost","body","post","Transition","React","forwardRef","props","ref","Slide","direction","EditMenu","useState","propEdit","setPropsEdit","useEffect","rowdata","Dialog","maxWidth","style","maxHeight","open","TransitionComponent","keepMounted","onClose","ModalTitle","type","defaultValue","onChange","event","MenuItem","value","id","MenuItemUrl","Description","placeholder","Number","Price","Diet","Calories","Charecterstic","htmlFor","Publish","display","Button","color","variant","onClick","modelcallback","useStyles","makeStyles","theme","root","media","height","paddingTop","avatarRed","width","padding","backgroundColor","red","avatarGreen","green","avatarPurple","purple","backdrop","zIndex","drawer","MenuListItems","classes","loading","setIsLoading","setModalTitle","items","setitems","showModal","setShowModal","setRowdata","dataTableTheme","createTheme","overrides","MUIDataTableSelectCell","expandDisabled","visibility","MuiTableBody","MuiTableRow","head","fetchData","then","response","menu_items","catch","e","length","Activate","rowid","active","updateMenu","JSON","stringify","handleAdd","muicolumns","name","options","viewColumns","filter","sort","customBodyRender","tableMeta","updateValue","foodtype","rowData","Card","CardHeader","avatar","Avatar","title","CardMedia","image","CardContent","Grid","container","spacing","item","sx","Typography","component","CardActions","IconButton","Edit","Pause","PlayArrow","selectableRows","filterType","responsive","download","print","rowsPerPage","selectableRowsHeader","tableBodyHeight","selectableRowsOnClick","customToolbar","Add","Backdrop","CircularProgress","position","top","left","returnvalues","ThemeProvider","columnsarray","map","push","colData","getRows","columns","Separator","borderRight","palette","black","marginLeft","marginRight","ScheduleMenu","updateData","setUpdateData","createCheckedValues","MenuId","CategoryID","test","split","i","key","String","some","it","updateSchedule","xs","FormGroup","row","FormControlLabel","control","Checkbox","defaultChecked","found","checked","index","findIndex","x","undefined","splice","label","store","Cart","iL","useContext","itemContext","history","useHistory","state","list","loggedIn","totalCost","totalItems","calcAmt","useCallback","method","document","getElementById","classList","add","tabIndex","l","diet","toLowerCase","Menu","payload","quantity","memo","CategoryBar","href","role","MenuCard","colorCircle","MenuID","RestaurantMenu","setLoading","error","setError","result_dataset","z","set","message","Category","orderedItems","prev","window","scrollY","scrolling","current","catBar","addEventListener","removeEventListener","clearAll","createContext","initialState","myReducer","action","newList","pll","t","totalitems","reduce","b","remove","App","useReducer","myState","dispatch","user","Provider","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c64f56b.chunk.js","sourcesContent":["import \"./sidebar.css\";\nimport {\n  LineStyle,\n  Timeline,\n  TrendingUp,\n  PermIdentity,\n  Storefront,\n  AttachMoney,\n  BarChart,\n  MailOutline,\n  DynamicFeed,\n  ChatBubbleOutline,\n  WorkOutline,\n  Report, MenuBook,\n\n  Restaurant,\n} from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarWrapper\">\n        <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Dashboard</h3>\n          <ul className=\"sidebarList\">\n            {/* <Link  to=\"/\"  className=\"link\">\n            <li className=\"sidebarListItem \">\n              <LineStyle className=\"sidebarIcon\" />\n              Customer Menu\n            </li>\n            </Link> */}\n            <Link to=\"/\" className=\"link\">\n\n            <li className=\"sidebarListItem\">\n              <Restaurant className=\"sidebarIcon\" />\n              Schedule\n            </li>\n            </Link>\n            <Link to=\"/menulist\" className=\"link\">\n              <li className=\"sidebarListItem\">\n                <MenuBook className=\"sidebarIcon\" />\n                Menu Items\n              </li>\n            </Link>\n\n            <Link to=\"/menu\"  target={\"_blank\"}   className=\"link\">\n              <li className=\"sidebarListItem\">\n                <MenuBook className=\"sidebarIcon\" />\n                Customer Menu\n              </li>\n            </Link>\n          </ul>\n        </div>\n        \n        <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Notifications</h3>\n          <ul className=\"sidebarList\">\n            \n            <li className=\"sidebarListItem\">\n              <DynamicFeed className=\"sidebarIcon\" />\n              Feedback\n            </li>\n            <li className=\"sidebarListItem\">\n              <ChatBubbleOutline className=\"sidebarIcon\" />\n              Messages\n            </li>\n          </ul>\n        </div>\n       \n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.5617570c.jpg\";","import React from \"react\";\nimport \"./topbar.css\";\nimport { NotificationsNone, Language, Settings } from \"@material-ui/icons\";\nimport logo from \"./logo.jpg\";\n\n\nexport default function Topbar() {\n  return (\n    <div className=\"topbar\">\n      <div className=\"topbarWrapper\">\n        <div className=\"topLeft\">\n          <span className=\"logo\">Mr.Sphagetti</span>\n        </div>\n        <div className=\"topRight\">\n          <div className=\"topbarIconContainer\">\n          \n          </div>\n          <div className=\"topbarIconContainer\">\n          \n          </div>\n          <div className=\"topbarIconContainer\">\n           \n          </div>\n          <img src={logo} alt=\"\" className=\"topAvatar\"  />\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","const axios = require(\"axios\");\n\n\n\nexport const axiosGet = async (url) => {\n  try {\n    let resp = await axios.get(url);\n    console.log(\"axios Get \", resp);\n    return await resp.data;\n  } catch (err) {\n    const errorString =\n      \"Error in API GET request URL \" + url + \" . Actual Request Error \" + err;\n    console.log(errorString);\n  }\n};\n\nexport const axiosPost = async (url, body) => {\n  try {\n    let resp = await axios.post(url, body);\n    console.log(\"axios Post \", resp);\n    return await resp.data;\n  } catch (err) {\n    const errorString =\n      \"Error in API POST request URL \" +\n      url +\n      \" with POST Body \" +\n      body +\n      \". Actual Request Error \" +\n      err;\n    console.log(errorString);\n  }\n};\n","import {\n  \n  Publish,\n} from \"@material-ui/icons\";\nimport \"./EditMenu.css\";\nimport React, { useEffect } from \"react\";\n\n\nimport {Dialog,\n  Button,\n  \n  Slide\n  //FormHelperText,\n} from \"@material-ui/core\";\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function EditMenu(props) {\n\n\n  \n\n  const [propEdit, setPropsEdit] = React.useState({});\n  const handleclick=()=>{\n\n  \n    props.modelcallback(\n      propEdit\n    );\n\n  }\n\n  useEffect(() => {\n    \n\n    setPropsEdit( {\"MenuId\":  props.rowdata[0],\"MenuItem\":props.rowdata[1],\"Description\":props.rowdata[2],\"MenuItemUrl\":props.rowdata[3],\"Diet\":props.rowdata[4],\"Price\":props.rowdata[5],\"IsActive\":props.rowdata[6]==='Yes'?1:0,\"Calories\":props.rowdata[7],\"Charecterstic\": props.rowdata[8]});\n  }, [props.rowdata]);\n  return (\n    <Dialog\n    maxWidth=\"md\"\n    style={{ maxHeight: \"800px\" }}\n    open={props.open}\n    TransitionComponent={Transition}\n    keepMounted={false}\n    onClose={props.onClose}\n  >\n    <div className=\"user\">\n      <div className=\"userTitleContainer\">\n        <h1 className=\"userTitle\">{props.ModalTitle}</h1>\n        \n      </div>\n      <div className=\"userContainer\">\n      \n        <div className=\"userUpdate\">\n          <form className=\"userUpdateForm\">\n            <div className=\"userUpdateLeft\">\n              <div className=\"userUpdateItem\">\n                <label>Menu Name</label>\n                <input\n                  type=\"text\"\n                 defaultValue={propEdit[\"MenuItem\"]}\n                 onChange={event => setPropsEdit({...propEdit,MenuItem:event.target.value})}\n\n                  className=\"userUpdateInput\"\n                />\n\n                \n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Url</label>\n                <input\n                  type=\"text\"\n                  id='menurl'\n                  className=\"userUpdateInput\"\n                  defaultValue={propEdit[\"MenuItemUrl\"]}\n                  onChange={event => setPropsEdit({...propEdit,MenuItemUrl:event.target.value})}\n\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Description </label>\n                <input\n                  type=\"text\"\n                  defaultValue={propEdit[\"Description\"]}\n                  className=\"userUpdateInput\"\n                  onChange={event => setPropsEdit({...propEdit,Description:event.target.value})}\n\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Price </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"$\"\n                  className=\"userUpdateInput\"\n                  defaultValue={ propEdit[\"Price\"]?\"$\"+Number(propEdit[\"Price\"]):''}\n                  onChange={event => setPropsEdit({...propEdit,Price:event.target.value})}\n\n\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Diet</label>\n                <input\n                  type=\"text\"\n                  defaultValue={ propEdit[\"Diet\"]}\n                  onChange={event => setPropsEdit({...propEdit,Diet:event.target.value})}\n\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n               \n              </div>\n\n              <div className=\"userUpdateItem\">\n                <label>Calories</label>\n                <input\n                  type=\"text\"\n                  defaultValue={ propEdit[\"Calories\"]}\n                  onChange={event => setPropsEdit({...propEdit,Calories:event.target.value})}\n\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Charecterstic</label>\n                <input\n                  type=\"text\"\n                  defaultValue={ propEdit[\"Charecterstic\"]}\n                  onChange={event => setPropsEdit({...propEdit,Charecterstic:event.target.value})}\n\n                  className=\"userUpdateInput\"\n                />\n              </div>\n            </div>\n            <div className=\"userUpdateRight\">\n         \n              <div className=\"userUpdateUpload\">\n                <img\n                  className=\"userUpdateImg\"\n                  src={ propEdit[\"MenuItemUrl\"]}\n                  alt=\"\"\n                />\n                <label htmlFor=\"file\">\n                  <Publish className=\"userUpdateIcon\" />\n                </label>\n                <input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\n              </div>\n              <Button          color=\"primary\" variant=\"contained\" onClick={handleclick}>{props.ModalTitle==='Edit Menu'?'Update':'Add'}</Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    </Dialog>\n\n  );\n}\n","import \"./menuList.css\";\n\nimport React, {useEffect,useState} from 'react'\nimport { axiosPost,axiosGet } from  \"../../common\";\nimport MUIDataTable from 'mui-datatables';\nimport {CardMedia,Card,CardActions,CardContent,Typography,IconButton,CardHeader,Avatar,Grid,Backdrop,Button,CircularProgress} from '@material-ui/core';\n\nimport { red,green,purple } from '@material-ui/core/colors';\n\n\nimport {Edit,Pause,PlayArrow,Add}from '@material-ui/icons';\nimport EditMenu  from \"./modal/EditMenu\";\n\n\nimport {\n  makeStyles,\n  ThemeProvider,\n  createTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 300,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  \n  avatarRed: {\n    height:35,\n    width:35,\n    padding:8,\n    backgroundColor: red[500],\n  },\n  avatarGreen: {\n    height:35,\n    width:35,\n    padding:8,\n    backgroundColor: green[500],\n  },\n  avatarPurple: {\n    height:35,\n    width:35,\n    padding:8,\n    backgroundColor: purple[500],\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\nexport default function MenuListItems() {\n\n  const classes = useStyles();\n\nconst[loading,setIsLoading]=useState(true);\nconst[ModalTitle,setModalTitle]=useState('Edit Menu');\n\n  const [items,setitems]=useState([]);\n  const [showModal,setShowModal]=useState(false);\nconst[rowdata,setRowdata]=useState([]);\n\n  const dataTableTheme = createTheme({\n    overrides: {\n      MUIDataTableSelectCell: {\n        expandDisabled: {\n          visibility: \"hidden\",\n        },\n        root: {\n          backgroundColor: \"#FFF\",\n        },\n      },\n      MuiTableBody: {\n        root: {\n          //whiteSpace: \"pre\",\n        },\n        \"& div[class^='MUIDataTable-responsiveStandard-']\": {\n          zIndex: 0,\n        },\n      },\n  \n      MuiTableRow: {\n        head: {\n         // whiteSpace: \"pre\",\n        },\n      },\n    },\n  });\n\n  const fetchData = async () => {\n    setIsLoading(true);\n\n  \n    axiosGet('/api/getmenu')\n  .then(response =>{\n    setitems(response.menu_items);\n    setIsLoading(false);\n  })\n  .catch((e)=>{\n    setIsLoading(false);\n  })\n\n    \n  };\n  useEffect(() => {\n    if(items && items.length ===0){\n    fetchData();\n    }\n    setIsLoading(false);\n\n  }, [items]);\n\n    \nconst getFoodColor=(foodtype)=>{\n  if(foodtype==='Mild') return classes.avatarPurple;\n  else if (foodtype==='Spicy') return classes.avatarRed;\n  else return classes.avatarGreen;\n\n\n}\nconst getRows =()=>{\n\n  \n  let data=[];\n  let columnsarray = [\n    \"MenuID\",\n    \"MenuItem\",\n    \"Description\",\n    \"MenuItemUrl\",\n    \"Diet\",\n    \"Price\",\n    \"IsActive\",\n    \"Calories\",\n    \"Charecterstic\",\n\n  ];\n\n  if(items && items.length >0)\n  {\n  items.map((item) => {\n    data.push(\n      columnsarray.map(function (colData) {\n\n        return item[colData]===true?\"Yes\":item[colData]===false?\"No\":item[colData]\n       \n      })\n    );\n  });\n}\n\n\n\nreturn data;\n \n};\n\nconst cancelModal=()=>{\n  setShowModal(false);\n\n}\n\nconst Activate=(rowid,active)=>{\n\n  var data =    ( {\"MenuId\":  rowid[0],\"MenuItem\":rowid[1],\"Description\":rowid[2],\"MenuItemUrl\":rowid[3],\"Diet\":rowid[4],\"Price\":rowid[5],\"IsActive\":active,\"Calories\":rowid[7],\"Charecterstic\": rowid[8]});\n  updateMenu(data)\n}\n\nconst updateMenu=(data)=>{\n\n\n  axiosPost('/api/updatemenu', JSON.stringify({data}))\n  .then(response =>{\n    fetchData();\n  })\n  .catch((e)=>{\n    setIsLoading(false);\n  })\n\n}\n\nconst insertMenu=(data)=>{\n\n\n  axiosPost('/api/insertmenu', JSON.stringify({data}))\n  .then(response =>{\n    fetchData();\n  })\n  .catch((e)=>{\n    setIsLoading(false);\n  })\n\n}\n\nconst modelcallback=(returnvalues)=>{\n\nif(ModalTitle==='Edit Menu')\n{\n  setShowModal(false);\n\n  setIsLoading(true)\n\n  updateMenu(returnvalues)  \n}\nelse\n{\n  setRowdata([])\n  setShowModal(false);\n\n  setIsLoading(true)\n\n  insertMenu(returnvalues)  \n\n}\n  \n \n  \n\n}\nconst handleAdd=()=>\n{\n  setRowdata([])\n\n  setModalTitle('Add Menu');\nsetShowModal(true);\n}\nconst muicolumns = [\n  {\n    name: \"MenuID\",\n    options: {\n     \n      display: false,\n          viewColumns: false,\n          filter: false,\n     \n    }\n  },\n  {\n    name: \"Menu Item\",\n    options: {\n      filter: true,\n      display: false,\n     \n    }\n  },\n  {\n    name: \"Description\",\n    options: {\n      filter: true,\n      display: false,\n     \n    }\n  },\n  \n  {\n    name: \"Menu\",\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value, tableMeta, updateValue) => {\n\n\n       const rowid=tableMeta.rowData;\n\n\n        return (\n       \n          <Card className={classes.root}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\" className={getFoodColor(rowid[8])}>\n              {rowid[4]}\n              </Avatar>\n            }\n           \n            title={rowid[1]+ \"(\" +rowid[7]+\".Cal\" + \")\" }\n            \n          />\n          <CardMedia\n            className={classes.media}\n            image={rowid[3]}\n            title={rowid[1]}\n          />\n          <CardContent>\n\n\n          <Grid container spacing={1}>\n                  <Grid item sx={8}>\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                              {rowid[2]}\n                              </Typography>\n                  </Grid>\n                  <Grid item sx={4}>\n                          <CardActions >\n\n                  <IconButton  onClick={()=>{\n                      setModalTitle('Edit Menu');\n\n                    setShowModal(true);\n                    setRowdata(rowid)\n                  }}>\n\n                    <Edit /> Edit\n                  </IconButton>\n\n                  {rowid[6]==='Yes' ? <IconButton aria-label=\"share\"   onClick={()=>{\n                    Activate(rowid,0)\n                  }}>\n                    <Pause /> Pause\n                  </IconButton>\n                  :  <IconButton aria-label=\"share\" onClick={()=>{\n                  Activate(rowid,1)\n                  }}>\n                  <PlayArrow />Resume\n                  </IconButton>\n                  }\n\n                          </CardActions>\n                  </Grid>\n      \n          </Grid>\n\n           \n          </CardContent>\n       \n        \n         \n        </Card>\n     \n       \n        );\n      },\n    },\n  },\n  {\n    name: \"Diet\",\n    options: {\n    \n      filter: true,\n      display: false,\n    }\n  },\n  {\n    name: \"Price\",\n    options: {\n    \n      filter: true,\n      customBodyRender: value => <span>${ Number( value)}</span>\n\n    }\n  },\n  {\n    name: \"Status\",\n    options: {\n    \n      filter: true,\n    }\n    \n  },\n  {\n    name: \"Calories\",\n    options: {\n    \n      filter: true,\n      display:false\n    }\n    \n  },\n  {\n    name: \"Taste\",\n    options: {\n    \n      filter: true,\n      display:false\n    }\n    \n  },\n];\n\n\nconst options = {\n \n  selectableRows: \"none\",\n  filterType: 'dropdown',\n  responsive: 'vertical',\n  download: false,\n  print: false,\n  rowsPerPage: 10,\n  selectableRowsHeader: false,\n  tableBodyHeight: \"1000px\",\n\n      selectableRowsOnClick: false,\n\n      customToolbar: () => {\n        return (\n\n          <IconButton  onClick={handleAdd}>\n\nAdd Menu<Add  /> \n          </IconButton>\n\n        );\n      }\n};\n\n \n\n  return (\n\n    <div className=\"menuList\" >\n   {loading &&\n         <Backdrop className={classes.backdrop} open={loading} >\n\n   <CircularProgress\n                style={{ position: \"absolute\", top: \"50%\", left: \"50%\",zIndex :'auto'}}\n              />\n                    </Backdrop>}\n\n     <EditMenu\n          open={showModal}\n          onClose={cancelModal}\n          ModalTitle={ModalTitle}\n          modelcallback={modelcallback}\n          \n          rowdata={rowdata}\n        ></EditMenu> \n       \n            <ThemeProvider theme={dataTableTheme}>\n                  <MUIDataTable title={\"Menu List\"} data={getRows()} columns={muicolumns} options={options}  />\n            </ThemeProvider>\n            \n    </div>\n  );\n}\n","import \"./menuList.css\";\n\nimport React, {useEffect,useState} from 'react'\nimport { axiosPost,axiosGet\n } from  \"../../common\";\nimport MUIDataTable from 'mui-datatables';\nimport {CardMedia,Card,CardActions,CardContent,Typography,IconButton,CardHeader,Avatar,Grid,Backdrop,Button,CircularProgress,FormControlLabel,Checkbox,FormGroup, Link} from '@material-ui/core';\n\nimport { red,green,purple } from '@material-ui/core/colors';\n\nimport {Edit,Pause,PlayArrow,Update}from '@material-ui/icons';\n//import EditMenu  from \"./modal/EditMenu\";\n\n\nimport {\n  makeStyles,\n  ThemeProvider,\n  createTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  Separator: {\n    \"&.separator\": {\n        borderRight: `1px solid ${theme.palette.black}`,\n        maxWidth: \"0px\",\n        marginLeft: \"5px\",\n        marginRight: \"5px\",\n    }\n},\n  root: {\n    maxWidth: 300,\n    maxHeight:400\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  \n  avatarRed: {\n    height:35,\n    width:35,\n    padding:8,\n    backgroundColor: red[500],\n  },\n  avatarGreen: {\n    height:35,\n    width:35,\n    padding:8,\n    backgroundColor: green[500],\n  },\n  avatarPurple: {\n    height:35,\n    width:35,\n    padding:8,\n    backgroundColor: purple[500],\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\n\nexport default function ScheduleMenu() {\n\n  const classes = useStyles();\n\nconst[loading,setIsLoading]=useState(true);\nconst[editMenutracking,setMenutracking]=useState([]);\n\nconst[updateData,setUpdateData]=useState([]);\n\n\n  const [items,setitems]=useState([]);\n  \n  const dataTableTheme = createTheme({\n    overrides: {\n      MUIDataTableSelectCell: {\n        expandDisabled: {\n          visibility: \"hidden\",\n        },\n        root: {\n          backgroundColor: \"#FFF\",\n        },\n      },\n      MuiTableBody: {\n        root: {\n          //whiteSpace: \"pre\",\n        },\n        \"& div[class^='MUIDataTable-responsiveStandard-']\": {\n          zIndex: 0,\n        },\n      },\n  \n      MuiTableRow: {\n        head: {\n         // whiteSpace: \"pre\",\n        },\n      },\n\n    \n    },\n  });\n\n\n\n  const fetchData = async () => {\n    setIsLoading(true);\n\n  \n    axiosGet('/api/getschedulemenu')\n  .then(response =>{\n    setitems(response.menu_items);\n    setIsLoading(false);\n  })\n  .catch((e)=>{\n    setIsLoading(false);\n  })\n\n  };\n  useEffect(() => {\n    if(items && items.length ===0){\n    fetchData();\n    }\n    setIsLoading(false);\n\n  }, [items]);\n\n    \nconst getFoodColor=(foodtype)=>{\n  if(foodtype==='Mild') return classes.avatarPurple;\n  else if (foodtype==='Spicy') return classes.avatarRed;\n  else return classes.avatarGreen;\n\n\n}\n\n\nconst createCheckedValues=(MenuId,CategoryID ,rowdata)=>{\n\n\n  var test=  rowdata.split(',').map( Number );\n\n  if(test.length>0)\n  {\n\n    test.map(i=>{\n\n\n     const key =Number( String(MenuId)+String(CategoryID)+String(i));\n\n       const found=updateData.length>0 && updateData.some(it=>it.key===key);\n         if(!found)\n         {\n           \n           updateData.push( {\"key\":key,\"MenuID\":MenuId,\"CategoryID\":CategoryID,\"WeekId\":i});\n\n         }\n\n   })\n  }\n}\nconst getRows =()=>{\n\n  \n  let data=[];\n  let columnsarray = [\n    \"MenuID\",\n    \"MenuItem\",\n    \"Description\",\n    \"MenuItemUrl\",\n    \"Diet\",\n    \"Price\",\n    \"IsActive\",\n    \"Calories\",\n    \"Charecterstic\",\n    \"Appetizer\",\n    \"Salad\",\n    \"MainCourse\",\n    \"Dessert\"\n\n  ];\n\n  if(items && items.length >0)\n  {\n  items.map((item) => {\n    data.push(\n      columnsarray.map(function (colData) {\n  \n        //return item[colData]===true?\"Yes\":item[colData]===false?\"No\":item[colData]\n\n\n             if(item[colData]===true)\n             {\n               return 'Yes'\n             }\n             if(item[colData]===false)\n             {\n               return 'No'\n             }\n\n             if(colData==='Appetizer')\n             {\n              \n                  if(item[colData] && item[colData].split(',').map( Number ).length>0)\n                  {\n                    createCheckedValues(item['MenuID'],1,item[colData])\n                  }\n\n\n             }\n\n             if(colData==='Salad')\n             {\n                  if(item[colData] && item[colData].split(',').map( Number ).length>0)\n                  {\n                    createCheckedValues(item['MenuID'] ,2,item[colData])\n                  }\n\n\n             }\n\n             if(colData==='MainCourse')\n             {\n                  if(item[colData] && item[colData].split(',').map( Number ).length>0)\n                  {\n                    createCheckedValues(item['MenuID'] ,3,item[colData])\n                  }\n\n\n             }\n\n             if(colData==='Dessert')\n             {\n                  if(item[colData] && item[colData].split(',').map( Number ).length>0)\n                  {\n                    createCheckedValues(item['MenuID'] ,4,item[colData])\n                  }\n\n\n             }\n\n             return item[colData]\n       \n       \n      })\n    );\n  });\n}\n\n\n\nreturn data;\n \n};\n\nconst updateSchedule=()=>{\n\nconsole.log('hai rkr',updateData)\n  axiosPost('/api/insertschedule', JSON.stringify({updateData}))\n  .then(response =>{\n    fetchData();\n    setUpdateData([]);\n  })\n  .catch((e)=>{\n    fetchData();\n    setIsLoading(false);\n    setUpdateData([]);\n\n  })\n\n}\n\n\nconst muicolumns = [\n  {\n    name: \"MenuID\",\n    options: {\n     \n      display: false,\n          viewColumns: false,\n          filter: false,\n          \n     \n    }\n  },\n  {\n    name: \"Menu Item\",\n    options: {\n      filter: true,\n      display: false,\n     \n    }\n  },\n  {\n    name: \"Description\",\n    options: {\n      filter: true,\n      display: false,\n     \n    }\n  },\n  \n  {\n    name: \"Menu\",\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRender: (value, tableMeta, updateValue) => {\n\n\n       const rowid=tableMeta.rowData;\n\n\n        return (\n       \n          <Card className={classes.root}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\" className={getFoodColor(rowid[8])}>\n              {rowid[4]}\n              </Avatar>\n            }\n           \n            title={rowid[1]+ \"(\" +rowid[7]+\".Cal\" + \")\" }\n            \n          />\n          <CardMedia\n            className={classes.media}\n            image={rowid[3]}\n            title={rowid[1]}\n          />\n      \n       \n        \n         \n        </Card>\n     \n       \n        );\n      },\n    },\n  },\n  {\n    name: \"Diet\",\n    options: {\n    \n      filter: true,\n      display: false,\n    }\n  },\n  {\n    name: \"Price\",\n    options: {\n    \n      filter: true,\n      customBodyRender: value => <span>${ Number( value)}</span>\n\n    }\n  },\n  {\n    name: \"Status\",\n    options: {\n    \n      filter: true,\n    }\n    \n  },\n  {\n    name: \"Calories\",\n    options: {\n    \n      filter: true,\n      display:false\n    }\n    \n  },\n  {\n    name: \"Taste\",\n    options: {\n    \n      filter: true,\n      display:false\n    }\n    \n  },\n\n\n{\n    name: \"Appetizer\",\n    options: {\n\n      filter: false,\n      display:true,\n\n      customBodyRender: (value, tableMeta, updateValue) => {\n\n\n         const rowid=tableMeta.rowData;\n\n\n     \n        \n\n\n \n         return (\n        \n         \n      <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={1}>\n                <FormGroup row>\n                            <FormControlLabel\n                            \n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'1'+'1')) } \n\n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'1'+'1');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                if(event.target.checked && !found) \n                                {                              \n                                  \n                                  const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":1,\"WeekId\":1}\n\n                                updateData.push(data);\n\n                                }\n                                else \n                                {\n                                 \n\n                                  const index = updateData.findIndex(x => x.key ===key);\n\n                                  if (index !== undefined) updateData.splice(index, 1);\n                                  \n\n\n                                }\n\n                            }}\n                              />}\n                              label=\"Sun\"\n                            />\n                            <FormControlLabel\n                              //control={<Checkbox defaultChecked={nameArr && nameArr.includes(2)  } \n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'1'+'2')) } \n\n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'1'+'2');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":1,\"WeekId\":2}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Mon\"\n                            />\n                            <FormControlLabel\n                              //control={<Checkbox defaultChecked={nameArr && nameArr.includes(3)   } \n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'1'+'3')) } \n\n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'1'+'3');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":1,\"WeekId\":3}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Tue\"\n                            />\n                          \n                  \n                \n                <FormControlLabel\n                              // control={<Checkbox defaultChecked={(nameArr && nameArr.includes(4)  ) }\n\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'1'+'4')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'1'+'4');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":1,\"WeekId\":4}\n  \n                                   updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Wed\"\n                            />\n                <FormControlLabel\n                              // control={<Checkbox defaultChecked={(nameArr && nameArr.includes(5)  ) }\n\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'1'+'5')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'1'+'5');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":1,\"WeekId\":5}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Thu\"\n                            />\n                            <FormControlLabel\n                              // control={<Checkbox defaultChecked={nameArr && nameArr.includes(6)   } \n\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'1'+'6')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'1'+'6');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":1,\"WeekId\":6}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Fri\"\n                            />\n                            <FormControlLabel\n                              // control={<Checkbox defaultChecked={nameArr && nameArr.includes(7)   } \n\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'1'+'7')) } \n\n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'1'+'7');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":1,\"WeekId\":7}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Sat\"\n                            />\n                          \n                \n                  </FormGroup >\n\n          </Grid>\n      </Grid>\n \n        \n         );\n       },\n    }\n    \n  },\n\n\n\n  {\n    name: \"Salad\",\n    options: {\n\n      filter: false,\n      display:true,\n\n      customBodyRender: (value, tableMeta, updateValue) => {\n\n\n        const rowid=tableMeta.rowData;\n\n      //  nameArr =  rowid[10] ? rowid[10].split(',').map( Number ):[];\n\n\n      //  if(nameArr.length>0)\n      //  {\n\n      //   nameArr.map(i=>{\n\n\n      //     const key =Number(rowid[0]+'2'+i);\n\n      //       const found=updateData.length>0 && updateData.some(it=>it.key===key);\n      //         if(!found)\n      //         {\n                \n      //           updateData.push({\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":i});\n\n      //         }\n\n      //   })\n\n          \n\n       \n      //  }\n        \n\n\n \n         return (\n        \n         \n      <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={1}>\n                <FormGroup row>\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'2'+'1')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'2'+'1');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                if(event.target.checked && !found) \n                                {                              \n                                  \n                                  const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":1}\n\n                                updateData.push(data);\n\n                                }\n                                else \n                                {\n                                 \n\n                                  const index = updateData.findIndex(x => x.key ===key);\n\n                                  if (index !== undefined) updateData.splice(index, 1);\n                                  \n\n\n                                }\n\n                            }}\n                              />}\n                              label=\"Sun\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'2'+'2')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'2'+'2');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":2}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Mon\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'2'+'3')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'2'+'3');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":3}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Tue\"\n                            />\n                          \n                  \n                \n                 \n\n                <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'2'+'4')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'2'+'4');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":4}\n  \n                                   updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Wed\"\n                            />\n                <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'2'+'5')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'2'+'5');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":5}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Thu\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'2'+'6')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'2'+'6');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":6}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Fri\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'2'+'7')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'2'+'7');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":2,\"WeekId\":7}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Sat\"\n                            />\n                          \n                \n                  </FormGroup >\n\n          </Grid>\n      </Grid>\n \n        \n         );\n       },\n    }\n    \n  },\n  \n  {\n    name: \"Main Course\",\n    options: {\n\n      filter: false,\n      display:true,\n\n      customBodyRender: (value, tableMeta, updateValue) => {\n\n\n        const rowid=tableMeta.rowData;\n\n      //  nameArr =  rowid[11] ? rowid[11].split(',').map( Number ):[];\n\n\n      //  if(nameArr.length>0)\n      //  {\n\n      //   nameArr.map(i=>{\n\n\n      //     const key =Number(rowid[0]+'3'+i);\n\n      //       const found=updateData.length>0 && updateData.some(it=>it.key===key);\n      //         if(!found)\n      //         {\n                \n      //           updateData.push( {\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":i});\n\n      //         }\n\n      //   })\n\n          \n\n       \n      //  }\n        \n\n\n \n         return (\n        \n         \n      <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={1}>\n                <FormGroup row>\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'3'+'1')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'3'+'1');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                if(event.target.checked && !found) \n                                {                              \n                                  \n                                  const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":1}\n\n                                updateData.push(data);\n\n                                }\n                                else \n                                {\n                                 \n\n                                  const index = updateData.findIndex(x => x.key ===key);\n\n                                  if (index !== undefined) updateData.splice(index, 1);\n                                  \n\n\n                                }\n\n                            }}\n                              />}\n                              label=\"Sun\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'3'+'2')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'3'+'2');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":2}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Mon\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'3'+'3')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'3'+'3');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":3}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Tue\"\n                            />\n                          \n                  \n                \n                 \n                \n                <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'3'+'4')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'3'+'4');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":4}\n  \n                                   updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Wed\"\n                            />\n                <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'3'+'5')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'3'+'5');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":5}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Thu\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'3'+'6')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'3'+'6');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":6}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Fri\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'3'+'7')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'3'+'7');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":3,\"WeekId\":7}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Sat\"\n                            />\n                          \n                \n                  </FormGroup >\n\n          </Grid>\n      </Grid>\n \n        \n         );\n       },\n    }\n    \n  },\n  \n  {\n    name: \"Dessert\",\n    options: {\n\n      filter: false,\n      display:true,\n\n      customBodyRender: (value, tableMeta, updateValue) => {\n\n\n        const rowid=tableMeta.rowData;\n\n     \n          \n\n       \n    \n        \n\n\n \n         return (\n        \n         \n      <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={1}>\n                <FormGroup row>\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'4'+'1')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'4'+'1');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                if(event.target.checked && !found) \n                                {                              \n                                  \n                                  const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":4,\"WeekId\":1}\n\n                                updateData.push(data);\n\n                                }\n                                else \n                                {\n                                 \n\n                                  const index = updateData.findIndex(x => x.key ===key);\n\n                                  if (index !== undefined) updateData.splice(index, 1);\n                                  \n\n\n                                }\n\n                            }}\n                              />}\n                              label=\"Sun\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'4'+'2')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'4'+'2');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":4,\"WeekId\":2}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Mon\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'4'+'3')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'4'+'3');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":4,\"WeekId\":3}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Tue\"\n                            />\n                          \n                  \n                \n                <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'4'+'4')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'4'+'4');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":4,\"WeekId\":4}\n  \n                                   updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Wed\"\n                            />\n                <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'4'+'5')) } \n                              value={value}   \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'4'+'5');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":4,\"WeekId\":5}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Thu\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'4'+'6')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'4'+'6');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":4,\"WeekId\":6}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Fri\"\n                            />\n                            <FormControlLabel\n                              control={<Checkbox defaultChecked={updateData.length>0 && updateData.some(it=>it.key===Number(rowid[0]+'4'+'7')) } \n                              onChange={(event) => {\n                                const key =Number(rowid[0]+'4'+'7');\n\n                                const found=updateData.length>0 && updateData.some(it=>it.key===key);\n                                  if(event.target.checked && !found) \n                                  {                              \n                                    \n                                    const data={\"key\":key,\"MenuID\":rowid[0],\"CategoryID\":4,\"WeekId\":7}\n  \n                                  updateData.push(data);\n  \n                                  }\n                                  else \n                                  {\n                                   \n  \n                                    const index = updateData.findIndex(x => x.key ===key);\n  \n                                    if (index !== undefined) updateData.splice(index, 1);\n                                    \n  \n  \n                                  }\n  \n                              }}\n                              />}\n                              label=\"Sat\"\n                            />\n                          \n                \n                  </FormGroup >\n\n          </Grid>\n      </Grid>\n \n        \n         );\n       },\n    }\n    \n  },\n\n  \n\n];\n\n\nconst options = {\n \n  selectableRows: \"none\",\n  filterType: 'dropdown',\n  responsive: 'vertical',\n  download: false,\n  print: false,\n  rowsPerPage: 100,\n  tableBodyHeight: \"1000px\",\n  selectableRowsHeader: false,\n      selectableRowsOnClick: false,\n      customToolbar: () => {\n        return (\n          <Button          color=\"primary\" variant=\"contained\" onClick={updateSchedule} >Update</Button>\n\n\n        );\n      }\n\n};\n\n console.log('updatedata',updateData);\n\n  return (\n\n    <div className=\"userList\" >\n   {loading &&\n         <Backdrop className={classes.backdrop} open={loading} >\n\n   <CircularProgress\n                style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}\n              />\n                    </Backdrop>}\n\n       \n            <ThemeProvider theme={dataTableTheme}>\n                  <MUIDataTable title={\"Menu List\"} data={getRows()} columns={muicolumns} options={options}  />\n            </ThemeProvider>\n            \n    </div>\n  );\n}\n","import React,{useContext,useEffect,useCallback} from 'react'\nimport {itemContext} from '../../App';\nimport {useHistory} from 'react-router-dom';\nvar store = require('store');\n\nfunction Cart() {\n    //console.log(\"Cart rendered\");\n    const iL = useContext(itemContext);\n    const history =useHistory();\n    const {list,loggedIn}=iL.state;\n    const totalCost =store.get('totalCost')?? 0;\n    const totalItems =store.get('totalitems')?? 0;\n\n    const btnPopup=()=>{\n        document.getElementById('clrCart').classList.add(\"vs\");\n    }\n    const calcAmt = useCallback(()=>{\n        iL.method({type:'totalCost'});\n    },[list])\n\n    useEffect(()=>{    \n            calcAmt();\n    },[calcAmt])\n\n    const clearCart=()=>{\n        iL.method({type:'clearCart'});}\n\n        const increment=(data)=>{\n            iL.method({type:'addItem',payload:data})\n            iL.method({type:'getTotalItems'}) \n           iL.method({type:'totalCost'})  \n        }\n        const decrement= (data)=>{\n            iL.method({type:'deleteItem',payload:data})\n            \n            if(list && list.length){\n                iL.method({type:'getTotalItems'}) ;\n                iL.method({type:'totalCost'})\n            }           \n        }\n       const authorize=()=>{\n      return  loggedIn ? history.push('/checkout') : history.push('/login');\n         \n       }\n   return (\n       <>\n        {list.length && \n         <div className=\"cartNav bg-body p-2 text-dark border-top\">\n            <div className=\"container-cart p-2 d-flex flex-column\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <button type=\"button\" className=\"btn btn-outline-danger\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasBottom\" onClick={btnPopup}><i className=\"bi bi-chevron-double-up text-dark\"></i></button>\n               <div className=\"h4\">{`Your Orders (${totalItems})`}</div>\n               <div className=\"h4\">Subtotal:${totalCost}</div>\n               <div className=\"d-inline-flex\">\n               <button type=\"button\" id=\"clrCart\" className=\"btn btn-outline-danger invisible me-2\" data-bs-dismiss=\"offcanvas\" data-bs-target=\"#offcanvasBottom\" onClick={clearCart}>Clear Cart</button>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={authorize}>Continue</button>       \n               </div>\n            </div>\n            </div>\n            </div>}\n         {list.length &&   \n            <div className=\"offcanvas offcanvas-bottom\" tabIndex=\"-1\" id=\"offcanvasBottom\">\n            <div className=\"offcanvas-header\">\n              <h3 className=\"offcanvas-title\" id=\"offcanvasBottomLabel\">Your Orders</h3>\n              <div><button type=\"button\" id=\"close\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button></div>\n            </div><hr/>\n            <div className=\"offcanvas-body small\">\n              <table className=\"table\"> \n                <tbody>\n                {list.map(l=>(\n                    <tr key={l.Menu}>\n                    <td className=\"h5\"><span><i className={`bi bi-circle-fill ${l.diet.toLowerCase() ===\"v\"? \"greenColor\" : l.diet.toLowerCase() ===\"nv\" ? \"redColor\" : \"purpleColor\"}`}></i></span>{l.Menu}</td>\n                    <td>\n                        <div className=\"btn-group btn-group-sm\">\n                    <button className=\"btn btn-danger\" onClick={()=>decrement(l)}>-</button>\n                    <button className=\"btn btn-danger\">{l.quantity}</button>\n                    <button className=\"btn btn-danger\" onClick={()=>increment(l)}>+</button>\n                    </div>\n                    </td>\n                    <td>${l.quantity*l.Price}</td>\n                </tr>\n                ))}\n                </tbody>\n                </table>\n            </div>     \n          </div> }\n          </>\n          \n        \n   )\n\n}\n\nexport default React.memo(Cart);\n","import React from 'react'\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.css\"\n\nfunction CategoryBar() {\n  //console.log(\"CategoryBar rendered\");\n    return (\n        <div className=\"catContainer\" id=\"categoryBar\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div className=\"container\">\n   \n    <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#Appetizer\">Appetizer</a>\n        </li>\n        <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#Salad\">Salad</a>\n        </li>\n        <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#MainCourse\">MainCourse</a>\n        </li>\n        <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#Dessert\">Dessert</a>\n        </li>\n       \n        <li className=\"nav-item dropdown\">\n          <div className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-bs-toggle=\"dropdown\" role=\"button\">\n            More..\n          </div>\n          <ul className=\"dropdown-menu\">\n          <li><a className=\"dropdown-item\" href=\"#Pizzanians\">Pizzanians</a></li>\n            <li><a className=\"dropdown-item\" href=\"#Burgers\">Burgers</a></li>\n            <li><a className=\"dropdown-item\" href=\"#Shakes\">Shakes</a></li>\n         </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n</div>\n    )\n}\n\nexport default React.memo(CategoryBar)\n","import React,{useContext} from 'react'\nimport {itemContext} from \"../../App\"\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.css\"\nimport \"../../../node_modules/bootstrap-icons/font/bootstrap-icons.css\";\n\n\nfunction MenuCard({data}) {\n    //console.log(\"menucard rendered\",data);\n    const iL = useContext(itemContext);\n    \n    const sendId=(id)=>{\n        iL.method({type:'set_id',payload:id});\n    }\n\n    const increment=()=>{\n        console.log(\"increment link  rendered\",data);\n\n        iL.method({type:'addItem',payload:data})\n        iL.method({type:'getTotalItems'})           \n    };\n   \n\n    const colorCircle = data.diet.toLowerCase() ===\"v\" ? <i className=\"bi bi-circle-fill greenColor\"></i> :\n    data.diet.toLowerCase() ===\"nv\" ? <i className=\"bi bi-circle-fill redColor \"></i> : <i className=\"bi bi-circle-fill purpleColor\"></i>\n    \n    return (\n        <>\n       <div key ={data.id} className=\"menuCard d-flex justify-content-between flex-wrap\" onClick={()=>sendId(data.MenuID)}>\n           <div className=\"d-flex flex-column itemDescription\">\n               <div>\n               <div className=\"h5\">{data.Menu +'('+'Cal:'+data.Calories+')'}</div>\n               <div>{colorCircle}{' '}{data.diet}</div>\n               </div>\n               <div className=\"py-2\">${Number( data.Price)}</div>\n                <button type=\"button\" className=\"btn btn-outline-warning mt-auto p-2 w-50 addCart\" onClick={increment}>Add to cart</button>\n    </div>\n           <div className=\"menuCardImg position-relative\">\n               \n               <img alt=\"\" className=\"img-fluid img-rounded\" src={data.MenuItemUrl} width={175} height={90}/>\n               {/* {data.Menu !==\"\" ? <span className=\"position-absolute top-0 end-0 bg-primary badge\" style={{padding:\"5px\"}}>{data.Menu}</span> : ''} */}\n           </div>\n       </div>\n       \n      </>\n    )\n}\n\nexport default React.memo(MenuCard);\n","import React, {useEffect,useState} from 'react'\nimport { axiosPost,axiosGet } from  \"../../common\"\nimport MenuCard from './MenuCard';\n//import {itemContext} from '../App';\nimport \"./customer.css\"\nvar store =require('store');\n\nfunction RestaurantMenu() {\n  const [items,setitems]=useState(store.get('items') ?? []);\n  const [loading,setLoading]=useState(store.get('loading') ?? true);\n  const [error, setError]=useState(store.get('error') ?? '');\n\n\n\nuseEffect(()=>{\n  if(items.length ===0){\n    axiosGet('/api/gettodaymenu')\n  .then(response =>{\n\n\n  var data=response.menu_items;    \n   \n\n    var result_dataset=[];\n\n    result_dataset.push(\n      {  \"CategoryID\": 1,\n      \"Category\": \"Appetizer\",\"Menu\":\n    data.filter(\n         (z) => z.CategoryID ===1).map( (i)=> (  {MenuID:i.MenuID,Menu:i.MenuItem,MenuItemUrl:i.MenuItemUrl,Price:i.Price,Charecterstic:i.Charecterstic,Description:i.Description,diet:i.diet,Calories:i.Calories}))}\n \n    )\n\n    result_dataset.push(\n      {  \"CategoryID\": 2,\n      \"Category\": \"Salad\",\"Menu\":\n    data.filter(\n         (z) => z.CategoryID ===2).map( (i)=> (  {MenuID:i.MenuID,Menu:i.MenuItem,MenuItemUrl:i.MenuItemUrl,Price:i.Price,Charecterstic:i.Charecterstic,Description:i.Description,diet:i.diet,Calories:i.Calories}))}\n \n    )\n\n    result_dataset.push(\n      {  \"CategoryID\": 3,\n      \"Category\": \"MainCourse\",\"Menu\":\n    data.filter(\n         (z) => z.CategoryID ===3).map( (i)=> (  {MenuID:i.MenuID,Menu:i.MenuItem,MenuItemUrl:i.MenuItemUrl,Price:i.Price,Charecterstic:i.Charecterstic,Description:i.Description,diet:i.diet,Calories:i.Calories}))}\n \n    )\n\n    result_dataset.push(\n      {  \"CategoryID\": 4,\n      \"Category\": \"Dessert\",\"Menu\":\n    data.filter(\n         (z) => z.CategoryID ===4).map( (i)=> (  {MenuID:i.MenuID,Menu:i.MenuItem,MenuItemUrl:i.MenuItemUrl,Price:i.Price,Charecterstic:i.Charecterstic,Description:i.Description,diet:i.diet,Calories:i.Calories}))}\n \n    )\n\n\n\n    store.set('error', '');\n    store.set('loading', false);\n    store.set('items', response.data);\n   \n\n\n\n\n     setLoading(false);\n    setError('');    \n     setitems(result_dataset);\n  })\n  .catch((e)=>{\n    store.set('loading', false);\n    store.set('error', e.message);\n    setError(e.message);\n  })\n}\n},[items])\n    \n    return (\n     error!==\"\" ? <h2 className=\"text-center text-danger border border-dark p-2 position-absolute top-50 start-50 translate-middle\">{`${error}. Please try after sometime`}</h2> : loading === false ?\n      \n\n      (<div className=\"container-fluid menuLayout\">\n      {items && items.map((item) =>\n      (<div key={item.CategoryID} className=\"container d-flex flex-column\">\n      <div className=\"h3 tt\" id={item.Category}>{item.Category}</div>     \n      <div className=\"menuCardWrapper d-flex flex-wrap\">\n      {item.Menu && item.Menu.map(i=>\n        <MenuCard data={i} key={i.MenuID}/>  \n        )}    \n      </div>\n      </div> )\n      )}\n      </div>):\n        (\n          <div className=\"spinnerBlock d-flex justify-content-center\">\n          <div className=\"spinner-grow text-secondary\" role=\"status\">\n  <span className=\"visually-hidden\">Loading...</span>\n</div>\n<div className=\"spinner-grow text-danger\" role=\"status\">\n  <span className=\"visually-hidden\">Loading...</span>\n</div>\n<div className=\"spinner-grow text-warning\" role=\"status\">\n  <span className=\"visually-hidden\">Loading...</span>\n</div>\n</div>\n        )\n      \n    )\n}\n\nexport default React.memo(RestaurantMenu)\n","import React,{useContext,useEffect} from 'react'\nimport Cart from './Cart'\nimport CategoryBar from './CategoryBar'\n\nimport RestaurantMenu from './RestaurantMenu'\nimport {itemContext} from '../../App';\nvar store =require('store');\n\nfunction Menu() {\n    const iL = useContext(itemContext);\n    const orderedItems =store.get('orderedItems');\n    let {list}=iL.state ?? orderedItems ;\n    console.log(\"menu rendered\",list,orderedItems);\n    // navbar scrollup and down logic\n    //let prev= window.scrollY;\n   \n    useEffect(()=>{ \n        let prev= window.scrollY;  \n        const scrolling = ()=>{\n            let current = window.scrollY;\n            const catBar = document.getElementById(\"categoryBar\");\n            console.log(prev, current,\"p\",\"c\")\n            if (prev > current && current <10) {\n                if(catBar){\n                    catBar.style.top = \"85px\";\n                }\n              } \n            else{\n                if(catBar){\n                   document.getElementById('categoryBar').style.top = \"0\" ;\n                }\n            }\n              prev = current;\n        }   \n         document.addEventListener('scroll', scrolling)\n         return ()=> document.removeEventListener('scroll', scrolling);\n         \n        },[])\n    return (\n        <div>\n            <CategoryBar/>\n            <RestaurantMenu/>\n            {list && (list.length>0 ? <Cart/> : <></>)}\n        </div>\n    )\n}\n\nexport default React.memo(Menu)\n","import Sidebar from \"./components/sidebar/Sidebar\";\nimport Topbar from \"./components/topbar/Topbar\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React, { useReducer,useState,useEffect } from \"react\";\nimport { axiosPost,axiosGet } from  \"./common\";\n\nimport MenuListItems from \"./Views/MenuItems/MenuListItems\";\nimport ScheduleMenu from \"./Views/ScheduleMenu/ScheduleMenu\";\nimport Menu  from \"./Views/customer/Menu\";\n\n//import Menu  from \"./Views/test/Menu\";\n\nvar store = require(\"store\");\n\nstore.clearAll()\n\nexport const itemContext = React.createContext();\nconst initialState = {\n  id: 0,\n  list: store.get(\"orderedItems\") ?? [],\n  totalItems: store.get(\"totalitems\") ?? 0,\n  totalCost: store.get(\"totalCost\") ?? 0,\n};\nconst myReducer = (state = initialState, action) => {\n  const { type } = action;\n  switch (type) {\n    case \"set_id\":\n      return { ...state, id: action.payload };\n    case \"addItem\":\n\n    \n      let { list } = state;\n      let { payload } = action;\n\n      if (list === undefined || list.length === 0) {\n        let newList = { ...state, list: [{ ...payload, quantity: 1 }] };\n        store.set(\"orderedItems\", newList[\"list\"]);\n        return newList;\n      } else if (list.filter((item) => item.MenuID === payload.MenuID).length === 0) {\n        let newList = {\n          ...state,\n          list: [...list, { ...payload, quantity: 1 }],\n        };\n        store.set(\"orderedItems\", newList[\"list\"]);\n        return newList;\n      } else {\n        let newList = {\n          ...state,\n          list: list.map((item) =>\n            item.MenuID === payload.MenuID\n              ? { ...item, quantity: item.quantity + 1 }\n              : item\n          ),\n        };\n        store.set(\"orderedItems\", newList[\"list\"]);\n        return newList;\n      }\n    case \"deleteItem\":\n      let pll = action.payload;\n      //console.log(\"in delete\");\n      const t = state.list.map((item) =>\n        item.MenuID === pll.MenuID ? { ...item, quantity: item.quantity - 1 } : item\n      );\n      let newList = { ...state, list: t.filter((a) => a.quantity !== 0) };\n      store.set(\"orderedItems\", newList[\"list\"]);\n      if (store.get(\"orderedItems\").length === 0) {\n        store.set(\"totalitems\", 0);\n        store.set(\"totalCost\", 0);\n      }\n      return newList;\n\n    case \"getTotalItems\":\n      if (state.list.length > 0) {\n        let totalitems = {\n          ...state,\n          totalItems: state.list.map((a) => a.quantity).reduce((a, b) => a + b),\n        };\n        store.set(\"totalitems\", totalitems[\"totalItems\"]);\n        return totalitems;\n      } else return { ...state, totalItems: 0 };\n\n    case \"clearCart\":\n      store.remove(\"orderedItems\");\n      store.remove(\"totalitems\");\n      return { ...state, list: [] };\n    case \"totalCost\":\n      if (state.list.length > 0) {\n        store.set(\n          \"totalCost\",\n          state.list.map((l) => l.quantity * l.Price).reduce((a, b) => a + b)\n        );\n        return {\n          ...state,\n          totalCost: state.list\n            .map((l) => l.quantity * l.Price)\n            .reduce((a, b) => a + b),\n        };\n      }\n      break;\n   \n\n    default:\n      return state;\n  }\n};\nfunction App() {\n  const [myState, dispatch] = useReducer(myReducer, initialState);\n  const[loading,setIsLoading]=useState(true);\n  const[user,setUser]=useState('manager');\n\n\n  // const fetchData = async () => {\n  //   setIsLoading(true);\n\n  \n  //   axiosGet('/api/me')\n  // .then(response =>{\n  //   setUser(response.user);\n  //   setIsLoading(false);\n  // })\n  // .catch((e)=>{\n  //   setIsLoading(false);\n  // })\n\n    \n  // };\n  // useEffect(() => {\n  //   if(!user){\n  //   fetchData();\n  //   }\n  //   setIsLoading(false);\n\n  // }, [user]);\n\n  \n return (\n    <itemContext.Provider value={{ state: myState, method: dispatch }}>\n\n    <Router>\n      <Topbar />\n      <div className=\"container\">\n\n        {\n        user && user==='customer' ?\n        \n        <Switch>\n       \n          <Route exact path=\"/\">\n            <Menu/>\n          </Route>\n        \n        </Switch> :\n\n\n        user && user==='chef' ?  <Switch>\n       \n       <Route  exact path=\"/\">\n       <MenuListItems />\n       </Route>\n      \n      \n     </Switch> :\n\n\n     user && user==='manager' ?\n     <>\n        <Switch>\n        <Route exact path=\"/menulist\">\n        <Sidebar/>\n\n            <MenuListItems />\n          </Route>\n          <Route exact path=\"/\">\n          <Sidebar/>\n\n            <ScheduleMenu />\n          </Route>\n         \n       \n          <Route exact path=\"/menu\">\n          <Sidebar/>\n            <Menu    />\n          </Route>\n        </Switch>\n\n        </>\n        :''\n       \n        \n        }\n      </div>\n    </Router>\n    </itemContext.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}