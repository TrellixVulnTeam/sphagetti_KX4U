from argparse import ArgumentParser
from asyncio import get_event_loop, set_event_loop
from json import load
from logging import DEBUG, INFO, Formatter, basicConfig, getLogger
from logging.config import dictConfig
from logging.handlers import TimedRotatingFileHandler
from os import environ

from dotenv import load_dotenv

from dna_common.app.app import App


def app_cli(app_factory):
    parser = ArgumentParser()
    parser.add_argument('-d', '--debug', action='store_true', help='enable debug')
    parser.add_argument('-l', '--logfile', help='log to file')
    parser.add_argument('-e', '--envfile', help='load dotenv file')
    args = parser.parse_args()

    if args.envfile:
        load_dotenv(args.envfile)

    level = DEBUG if args.debug else INFO
    basicConfig(level=level)

    if args.debug:
        loop = get_event_loop()
        loop.set_debug(True)

    logfile = args.logfile or environ.get('APP_LOG_FILE', None)

    if logfile:
        formatter = Formatter('%(asctime)s [%(levelname)s:%(name)s] %(message)s', '%Y-%m-%dT%H:%M:%S%z')
        handler = TimedRotatingFileHandler(logfile, 'D', backupCount=5, utc=True)
        handler.setFormatter(formatter)
        logger = getLogger()
        logger.addHandler(handler)

    if isinstance(app_factory, App):
        app = app_factory
    else:
        app = app_factory()

    app.run()